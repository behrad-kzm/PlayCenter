//
//  iTunesSongsView.swift
//  PlayCenter
//
//  Created by Behrad Kazemi on 8/17/20.
//  Copyright (c) 2020 Behrad Kazemi. All rights reserved.
//
//  This file was generated by the BEK module generator.
//

import SwiftUI

struct iTunesSongsView: View {
  
  // MARK: -  Properties
  @ObservedObject var viewModel: iTunesSongsViewModel
  @State var showToolbar = true
  init(viewModel: iTunesSongsViewModel){
    self.viewModel = viewModel
  }
  
  var body: some View {
    NavigationView{
      GeometryReader { proxy in
        ZStack(alignment: .center) {
          self.makeList(proxy)
          self.makeToolbar(proxy)
        }
      }.navigationBarTitle(Text(self.viewModel.title), displayMode: .large)
    }
  }
  func makeList(_ proxy: GeometryProxy) -> some View {
    let cellSize = CGSize(width: proxy.size.width, height: 48)
    return List {
      ForEach(viewModel.items) { songVM in
        SongView(viewModel: songVM)
          .frame(width: cellSize.width, height: cellSize.height, alignment: .leading)
      }
      Rectangle()
        .frame(width: proxy.size.width, height: 250, alignment: .center)
        .foregroundColor(.clear)
      }
    .onAppear { UITableView.appearance().tableFooterView = UIView() }
    .onDisappear { UITableView.appearance().tableFooterView = nil }
  }
  
  func makeToolbar(_ proxy: GeometryProxy) -> some View {
    return VStack(alignment: .center, spacing: 0) {
      Spacer()
      ToolbarView(viewModel: self.viewModel.toolbarVM)
      .frame(width: proxy.size.width, height: 100)
      .edgesIgnoringSafeArea(.bottom)
      .opacity(showToolbar ? 1 : 0)
    }
  }
}

struct iTunesSongsView_Previews: PreviewProvider {
  static var previews: some View {
    iTunesSongsView(viewModel: iTunesSongsViewModel(router: iTunesSongsRouter(platforms: Application.shared.package)))
  }
}
